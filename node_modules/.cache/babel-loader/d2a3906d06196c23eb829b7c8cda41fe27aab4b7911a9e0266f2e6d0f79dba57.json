{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Desktop/github/RightClicker/src/screens/SettingsScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsScreen = ({\n  onExport,\n  onImport,\n  onReset\n}) => {\n  _s();\n  const [importData, setImportData] = useState('');\n  const [message, setMessage] = useState('');\n  const handleExport = () => {\n    const data = onExport();\n    navigator.clipboard.writeText(data).then(() => setMessage('Game data copied to clipboard!')).catch(() => setMessage('Failed to copy. Please copy manually from textarea.'));\n    setImportData(data); // Show it in textarea as well\n  };\n  const handleImport = () => {\n    if (window.confirm('Are you sure you want to import? This will overwrite your current game.')) {\n      try {\n        onImport(importData);\n        setMessage('Game data imported successfully!');\n      } catch (error) {\n        setMessage('Error importing data. Is it valid?');\n        console.error(\"Import error:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Export Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExport,\n      children: \"Export to Clipboard & Textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Import Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: importData,\n      onChange: e => setImportData(e.target.value),\n      rows: 10,\n      cols: 50,\n      placeholder: \"Paste your game data here\",\n      style: {\n        backgroundColor: '#333',\n        color: '#0f0',\n        border: '1px solid #0a0',\n        width: '100%',\n        boxSizing: 'border-box'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImport,\n      children: \"Import from Textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      style: {\n        backgroundColor: '#500',\n        borderColor: '#800'\n      },\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsScreen, \"w0dU5YqwqluY5Z/3IocR483DOOQ=\");\n_c = SettingsScreen;\nexport default SettingsScreen;\nvar _c;\n$RefreshReg$(_c, \"SettingsScreen\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SettingsScreen","onExport","onImport","onReset","_s","importData","setImportData","message","setMessage","handleExport","data","navigator","clipboard","writeText","then","catch","handleImport","window","confirm","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","rows","cols","placeholder","style","backgroundColor","color","border","width","boxSizing","borderColor","_c","$RefreshReg$"],"sources":["/Users/dom/Desktop/github/RightClicker/src/screens/SettingsScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface SettingsScreenProps {\n  onExport: () => string;\n  onImport: (saveData: string) => void;\n  onReset: () => void;\n}\n\nconst SettingsScreen: React.FC<SettingsScreenProps> = ({ onExport, onImport, onReset }) => {\n  const [importData, setImportData] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleExport = () => {\n    const data = onExport();\n    navigator.clipboard.writeText(data)\n      .then(() => setMessage('Game data copied to clipboard!'))\n      .catch(() => setMessage('Failed to copy. Please copy manually from textarea.'));\n    setImportData(data); // Show it in textarea as well\n  };\n\n  const handleImport = () => {\n    if (window.confirm('Are you sure you want to import? This will overwrite your current game.')) {\n      try {\n        onImport(importData);\n        setMessage('Game data imported successfully!');\n      } catch (error) {\n        setMessage('Error importing data. Is it valid?');\n        console.error(\"Import error:\", error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Settings</h2>\n      <h3>Export Game</h3>\n      <button onClick={handleExport}>Export to Clipboard & Textarea</button>\n      \n      <h3>Import Game</h3>\n      <textarea\n        value={importData}\n        onChange={(e) => setImportData(e.target.value)}\n        rows={10}\n        cols={50}\n        placeholder=\"Paste your game data here\"\n        style={{ backgroundColor: '#333', color: '#0f0', border: '1px solid #0a0', width: '100%', boxSizing: 'border-box' }}\n      />\n      <button onClick={handleImport}>Import from Textarea</button>\n      {message && <p>{message}</p>}\n      <h3>Reset Game</h3>\n      <button \n        onClick={onReset}\n        style={{ backgroundColor: '#500', borderColor: '#800' }}\n      >\n        Reset Game\n      </button>\n    </div>\n  );\n};\nexport default SettingsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}